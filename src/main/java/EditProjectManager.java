    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.io.FileNotFoundException;
/**
 *
 * @author dongk
 */
public class EditProjectManager extends javax.swing.JFrame {

    /**
     * Creates new form EditProjectManager
     */
    public EditProjectManager() {
        initComponents();
        // Implement AssignAndEditPMRoleOption Page from AssignAndEditPMRoleOption JFrame
        AssignAndEditPMRoleOption assignAndEditPMRoleOption = new AssignAndEditPMRoleOption();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        statusTxt = new javax.swing.JTextField();
        ShowButtonActionPerformed = new javax.swing.JButton();
        EditButtonActionPerformed = new javax.swing.JButton();
        DeleteButtonActionPerformed = new javax.swing.JButton();
        SaveButtonActionPerformed = new javax.swing.JButton();
        ReturnButtonActionPerformed = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProjectManagerStatusData = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel1.setText("Edit Project Manager Role");

        ShowButtonActionPerformed.setBackground(java.awt.Color.gray);
        ShowButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        ShowButtonActionPerformed.setText("Show");
        ShowButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowButtonActionPerformedActionPerformed(evt);
            }
        });

        EditButtonActionPerformed.setBackground(java.awt.Color.gray);
        EditButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        EditButtonActionPerformed.setText("Edit");
        EditButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformedActionPerformed(evt);
            }
        });

        DeleteButtonActionPerformed.setBackground(java.awt.Color.gray);
        DeleteButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        DeleteButtonActionPerformed.setText("Delete");
        DeleteButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformedActionPerformed(evt);
            }
        });

        SaveButtonActionPerformed.setBackground(java.awt.Color.gray);
        SaveButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        SaveButtonActionPerformed.setText("Save");
        SaveButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformedActionPerformed(evt);
            }
        });

        ReturnButtonActionPerformed.setBackground(java.awt.Color.gray);
        ReturnButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        ReturnButtonActionPerformed.setText("Return");
        ReturnButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformedActionPerformed(evt);
            }
        });

        ProjectManagerStatusData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Status"
            }
        ));
        jScrollPane1.setViewportView(ProjectManagerStatusData);

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel2.setText("Enter Lecturer Name:");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel3.setText("Enter Status:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/output-onlinepngtools.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(ShowButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(EditButtonActionPerformed)
                                    .addGap(18, 18, 18)
                                    .addComponent(DeleteButtonActionPerformed)
                                    .addGap(18, 18, 18)
                                    .addComponent(SaveButtonActionPerformed)
                                    .addGap(18, 18, 18)
                                    .addComponent(ReturnButtonActionPerformed)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(71, 71, 71)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(statusTxt))))
                        .addGap(80, 80, 80)
                        .addComponent(jLabel4)
                        .addGap(61, 61, 61))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DeleteButtonActionPerformed, EditButtonActionPerformed, ReturnButtonActionPerformed, SaveButtonActionPerformed, ShowButtonActionPerformed});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(statusTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveButtonActionPerformed)
                            .addComponent(ReturnButtonActionPerformed)
                            .addComponent(DeleteButtonActionPerformed)
                            .addComponent(EditButtonActionPerformed)
                            .addComponent(ShowButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {DeleteButtonActionPerformed, EditButtonActionPerformed, ReturnButtonActionPerformed, SaveButtonActionPerformed, ShowButtonActionPerformed});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        // Click Return Button and return back to Assign and Edit PM Role Option Page
         AssignAndEditPMRoleOption assignAndEditPMRoleOption = new AssignAndEditPMRoleOption();
         assignAndEditPMRoleOption.show();
         dispose();
    }//GEN-LAST:event_ReturnButtonActionPerformedActionPerformed

    private void ShowButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        // Set the Project Manager Status Data Table as Default Table Model
        DefaultTableModel model = (DefaultTableModel) ProjectManagerStatusData.getModel();
        //Set the Count of Row as Zero
        model.setRowCount(0);
        
        try(BufferedReader reader = new BufferedReader(new FileReader("project manager status.txt"))){
            String line;
            String[] projectmanagerstatusData = new String[2];
            while ((line = reader.readLine())!= null){
                if(line.startsWith("Name: ")){
                    projectmanagerstatusData[0] = line.substring(6);
                }else if(line.startsWith("Status: ")){
                    projectmanagerstatusData[1] = line.substring(8);
                    model.addRow(projectmanagerstatusData);
                    projectmanagerstatusData = new String[2];
            }
        }
        JOptionPane.showMessageDialog(null,"Project Manager Status loaded successfully !");    
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error loading the Project Manager Status !");
        }
    }//GEN-LAST:event_ShowButtonActionPerformedActionPerformed

    private void EditButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ProjectManagerStatusData.getModel();
        int selectedRowIndex = ProjectManagerStatusData.getSelectedRow();
        model.setValueAt(nameTxt.getText(), selectedRowIndex, 0);
        model.setValueAt(statusTxt.getText(), selectedRowIndex, 1);
    }//GEN-LAST:event_EditButtonActionPerformedActionPerformed

    private void DeleteButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformedActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) ProjectManagerStatusData.getModel();
        int selectedRowIndex = ProjectManagerStatusData.getSelectedRow();
        
        if(selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Please select a row to change !");
            return;
        }
        
        String name = (String) model.getValueAt(selectedRowIndex, 0);
        model.removeRow(selectedRowIndex);
        
        File inputFile = new File("project manager status.txt");
        File tempFile = new File("tempproject manager status.txt");
        
        try(BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))){
            
            String line;
            boolean found = false;
            
            while ((line = reader.readLine()) != null) {
            if (line.startsWith("Name: ") && line.substring(6).equals(name)) {
                // Skip the next 5 lines in the original file (the old details)
                for (int i = 0; i < 2; i++) {
                    reader.readLine();
                }
                found = true;
            } else {
                writer.write(line + "\n");
            }
        }
         if (!found) {
            JOptionPane.showMessageDialog(null, "Cannot find the related lecturer name!");
        }    

      } catch (FileNotFoundException e) {
        JOptionPane.showMessageDialog(null, "Project Manager Status Text File not found: " + e.getMessage());
      } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error reading or writing file: " + e.getMessage());
      }

      if (inputFile.delete()) {
        if (!tempFile.renameTo(inputFile)) {
            JOptionPane.showMessageDialog(null, "Cannot rename the temporary file!");
        } else {
            JOptionPane.showMessageDialog(null, "The Project Manager Status that you choose has deleted successfully!");
        }
      } else {
        JOptionPane.showMessageDialog(null, "Cannot delete original project managser status file!");
      }
    }//GEN-LAST:event_DeleteButtonActionPerformedActionPerformed

    private void SaveButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ProjectManagerStatusData.getModel();
        int selectedRowIndex = ProjectManagerStatusData.getSelectedRow();
        
        if(selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Please select a row to change !");
            return;
        }
        
        String name = (String)model.getValueAt(selectedRowIndex, 0);
        String status = (String)model.getValueAt(selectedRowIndex, 1);
        
        try{
            File inputFile = new File("project manager status.txt");
            File tempFile = new File("tempproject manager status.txt");
            
            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));
            
            String line;
            boolean found = false;
      
            while ((line = reader.readLine()) != null) {
            if (line.startsWith("Name: ") && line.substring(6).equals(name)) {
                writer.write("Name: " + name + "\n");
                writer.write("Status: " + status + "\n");
                writer.write("\n");
                // Skip the next 5 lines in the original file (the old details)
                for (int i = 0; i < 2; i++) {
                    reader.readLine();
                }
                found = true;

            }else{
              writer.write(line + "\n");
            }
        }
            
        writer.close();
        reader.close();
        
        if (found) {
            if (!inputFile.delete()) {
                JOptionPane.showMessageDialog(null, "Could not delete original file");
                return;
            }
            if (!tempFile.renameTo(inputFile)) {
                JOptionPane.showMessageDialog(null, "Could not rename temporary file");
            } else {
                JOptionPane.showMessageDialog(null, "Project Manager Status updated successfully!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cannot find the related lecturer name!");
            tempFile.delete(); // cleanup the temp file if no matching lecturer found
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error replacing the project manager status: " + e.getMessage());
     }
    }//GEN-LAST:event_SaveButtonActionPerformedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditProjectManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditProjectManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButtonActionPerformed;
    private javax.swing.JButton EditButtonActionPerformed;
    private javax.swing.JTable ProjectManagerStatusData;
    private javax.swing.JButton ReturnButtonActionPerformed;
    private javax.swing.JButton SaveButtonActionPerformed;
    private javax.swing.JButton ShowButtonActionPerformed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField statusTxt;
    // End of variables declaration//GEN-END:variables
}
