/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.io.FileNotFoundException;
/**
 *
 * @author dongk
 */
public class EditLecturer extends javax.swing.JFrame {

    /**
     * Creates new form EditLecturer
     */
    public EditLecturer() {
        initComponents();
        // Implement Edit Option Page from Edit Option JFrame
        EditAndDeleteOption editAndDeleteOption = new EditAndDeleteOption();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        contactNumTxt = new javax.swing.JTextField();
        jobTitileTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        staffIDTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        LecturerProfileData = new javax.swing.JTable();
        ShowButtonActionPerformed = new javax.swing.JButton();
        EditButtonActionPerformed = new javax.swing.JButton();
        DeleteButtonActionPerformed = new javax.swing.JButton();
        SaveButtonActionPerformed = new javax.swing.JButton();
        ReturnButtonActionPerformed = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 102));

        jLabel6.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel6.setText("Lecturer Edit");

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel1.setText("Enter Name:");

        jLabel2.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel2.setText("Enter StaffID:");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel3.setText("Enter Email:");

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel4.setText("Enter ContactNum:");

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jLabel5.setText("Enter JobTitle:");

        LecturerProfileData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null}
            },
            new String [] {
                "Name", "StaffID", "Email", "ContactNum", "JobTitle"
            }
        ));
        jScrollPane1.setViewportView(LecturerProfileData);

        ShowButtonActionPerformed.setBackground(java.awt.Color.gray);
        ShowButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        ShowButtonActionPerformed.setText("Show");
        ShowButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowButtonActionPerformedActionPerformed(evt);
            }
        });

        EditButtonActionPerformed.setBackground(java.awt.Color.gray);
        EditButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        EditButtonActionPerformed.setText("Edit");
        EditButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformedActionPerformed(evt);
            }
        });

        DeleteButtonActionPerformed.setBackground(java.awt.Color.gray);
        DeleteButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        DeleteButtonActionPerformed.setText("Delete");
        DeleteButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformedActionPerformed(evt);
            }
        });

        SaveButtonActionPerformed.setBackground(java.awt.Color.gray);
        SaveButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        SaveButtonActionPerformed.setText("Save");
        SaveButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformedActionPerformed(evt);
            }
        });

        ReturnButtonActionPerformed.setBackground(java.awt.Color.gray);
        ReturnButtonActionPerformed.setFont(new java.awt.Font("Segoe Print", 0, 12)); // NOI18N
        ReturnButtonActionPerformed.setText("Return");
        ReturnButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformedActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/output-onlinepngtools.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addComponent(ShowButtonActionPerformed, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(48, 48, 48)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(contactNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jobTitileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(staffIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(EditButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(DeleteButtonActionPerformed)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(SaveButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ReturnButtonActionPerformed)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DeleteButtonActionPerformed, ReturnButtonActionPerformed, SaveButtonActionPerformed});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {contactNumTxt, emailTxt, jobTitileTxt, staffIDTxt});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel6)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(staffIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(contactNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jobTitileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ReturnButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ShowButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EditButtonActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DeleteButtonActionPerformed)
                                .addComponent(SaveButtonActionPerformed))))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {DeleteButtonActionPerformed, EditButtonActionPerformed, SaveButtonActionPerformed});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {contactNumTxt, emailTxt, jobTitileTxt, nameTxt, staffIDTxt});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        // Click Return Button return back to Edit Option Page
        EditAndDeleteOption editAndDeleteOption = new EditAndDeleteOption();
        editAndDeleteOption.show();
        dispose();
    }//GEN-LAST:event_ReturnButtonActionPerformedActionPerformed

    private void DeleteButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        // Set the Lecturer Profile Data as Default Table Model
        DefaultTableModel model = (DefaultTableModel) LecturerProfileData.getModel();
        // Selected Row Index with integer values from first count of rows.
        int selectedRowIndex = LecturerProfileData.getSelectedRow();
        
        // if admin did not select any rows, the system will show a message for admin to select the row that he wanted to change
        if(selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Please select a row to change !");
            return;
        }
        
        // Set the selected value row of 0 index as String name
        String name = (String) model.getValueAt(selectedRowIndex, 0);
        // This code is select the row that need to delete from the model
        model.removeRow(selectedRowIndex);
        
        // Call the lecturer txt file and create a temporary lecturer txt file
        File inputFile = new File("lecturer.txt");
        File tempFile = new File("templecturer.txt");
        
        // Importing File Buffering reading for read the lecturer txt file 
        // Importing File Buffering writing for write a new temp lecturer txt file
        try(BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile))){
            
            // Set the boolean as false at the start and the txt file of line as String.
            String line;
            boolean found = false;
            
            // While read the line from lecturer txt is not null values 
            while ((line = reader.readLine()) != null) {
            // Check the txt file line start with Name: and search for lecturer name 
            // after the : symbol equals to the String name from zero value of row
            if (line.startsWith("Name: ") && line.substring(6).equals(name)) {
                // Skip the next 5 lines in the original file (the old details)
                for (int i = 0; i < 5; i++) {
                    reader.readLine();
                }
                // represent boolean as true
                found = true;
                // else it will move to next line and search the name
            } else {
                writer.write(line + "\n");
            }
        }
        // if not found shows the message that it can't find the lecturer name    
         if (!found) {
            JOptionPane.showMessageDialog(null, "Cannot find the related lecturer name!");
        }    
      // Catch show the error message if the file has not found
      } catch (FileNotFoundException e) {
        JOptionPane.showMessageDialog(null, "File not found: " + e.getMessage());
      // Catch show the error messgae if it cannot read or write the file
      } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error for reading or writing file: " + e.getMessage());
      }
      // If the lecturer txt is delete
      if (inputFile.delete()) {
        // If the temporary txt file cannot rename to lecturer txt file
        if (!tempFile.renameTo(inputFile)) {
            // show a message that it cannot rename the temp file 
            JOptionPane.showMessageDialog(null, "Cannot rename the temporary file!");
        } else {
            // show that the selected lecturer profile has been deleted
            JOptionPane.showMessageDialog(null, "Lecturer details deleted successfully!");
        }
        // show it cannot delete the lecturer txt file if the txt file cannot delete
      } else {
        JOptionPane.showMessageDialog(null, "Cannot delete the original file!");
      }
      
    }//GEN-LAST:event_DeleteButtonActionPerformedActionPerformed

    private void SaveButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) LecturerProfileData.getModel();
        int selectedRowIndex = LecturerProfileData.getSelectedRow();
        
        if(selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "Please select a row to change !");
            return;
        }
        // Set the selected value row of 0 index as String name
        // Set the selected value row of 1 index as String staffID
        // Set the selected value row of 2 index as String email
        // Set the selected value row of 3 index as String contactNum
        // Set the selected value row of 4 index as String jobTitle
        String name = (String)model.getValueAt(selectedRowIndex, 0);
        String staffID = (String)model.getValueAt(selectedRowIndex, 1);
        String email = (String)model.getValueAt(selectedRowIndex, 2);
        String contactNum = (String)model.getValueAt(selectedRowIndex, 3);
        String jobTitle = (String)model.getValueAt(selectedRowIndex, 4);
        
        try{
            File inputFile = new File("lecturer.txt");
            File tempFile = new File("templecturer.txt");
            
            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));
            
            String line;
            boolean found = false;
            // Check the txt file line start with Name: and search for lecturer name 
            // after the : symbol equals to the String name from zero value of row
            while ((line = reader.readLine()) != null) {
            if (line.startsWith("Name: ") && line.substring(6).equals(name)) {
                // It will rewrite the selected lecturer profile again
                writer.write("Name: " + name + "\n");
                writer.write("Staff ID: " + staffID + "\n");
                writer.write("Email Address: " + email + "\n");
                writer.write("Contact Number: " + contactNum + "\n");
                writer.write("Job Title: " + jobTitle + "\n");
                writer.write("\n");
                // Skip the next 5 lines in the original file (the old details)
                for (int i = 0; i < 5; i++) {
                    reader.readLine();
                }
                found = true;

            }else{
              writer.write(line + "\n");
            }
        }
        // Close the write and read operation    
        writer.close();
        reader.close();
        
        // If found the lecturer txt file
        if (found) {
            if (!inputFile.delete()) {
                JOptionPane.showMessageDialog(null, "Could not delete original file");
                return;
            }
            if (!tempFile.renameTo(inputFile)) {
                JOptionPane.showMessageDialog(null, "Could not rename temporary file");
            } else {
                // Show the message that lecturer profile has been updated if the tempfile rename the lecturer text file
                JOptionPane.showMessageDialog(null, "Lecturer details updated successfully!");
            }
        } else {
            // if not found it will show message that it cannot find the lecturer name
            JOptionPane.showMessageDialog(null, "Cannot find the related lecturer name!");
            tempFile.delete(); // cleanup the temp file if no matching lecturer found
        }
      // catch and send error message while it cant replace the lecturer profile if the try cannot operate
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error replacing the lecturer profile: " + e.getMessage());
     }
    }//GEN-LAST:event_SaveButtonActionPerformedActionPerformed

    private void EditButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) LecturerProfileData.getModel();
        int selectedRowIndex = LecturerProfileData.getSelectedRow();
        // It will change the text value based on each of the variable name of text field
        model.setValueAt(nameTxt.getText(), selectedRowIndex, 0);
        model.setValueAt(staffIDTxt.getText(), selectedRowIndex, 1);
        model.setValueAt(emailTxt.getText(), selectedRowIndex, 2);
        model.setValueAt(contactNumTxt.getText(), selectedRowIndex, 3);
        model.setValueAt(jobTitileTxt.getText(), selectedRowIndex, 4);
    }//GEN-LAST:event_EditButtonActionPerformedActionPerformed

    private void ShowButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowButtonActionPerformedActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) LecturerProfileData.getModel();
        // Always set the count of row as 0 when pressed the Show Button
        model.setRowCount(0);
        
        try(BufferedReader reader = new BufferedReader(new FileReader("lecturer.txt"))){
            String line;
            // Set five string of the lecturer Data
            String[] lecturerData = new String[5];
            while ((line = reader.readLine())!= null){
                // lecturer Data row of name will same as Name: ""
                if(line.startsWith("Name: ")){
                    lecturerData[0] = line.substring(6);
                // lecturer Data row of staffID will same as Staff ID: ""
                }else if(line.startsWith("Staff ID: ")){
                    lecturerData[1] = line.substring(10);
                // lecturer Data row of Email Address will equal to Email Address: ""
                }else if(line.startsWith("Email Address: ")){
                    lecturerData[2] = line.substring(15);
                // lecturer Data row of ContactNum will same as Contact Number: ""    
                }else if(line.startsWith("Contact Number: ")){
                    lecturerData[3] = line.substring(16);
                  // lecturer Data row of Job Title will same as Job Titile: ""    
                }else if(line.startsWith("Job Title: ")){
                    lecturerData[4] = line.substring(11);
                    // Add the lecturerData to the rows of the table
                    model.addRow(lecturerData);
                    lecturerData = new String[5];
            }
        }
        JOptionPane.showMessageDialog(null,"Lecturer Profile loaded successfully !");    
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error loading the Lecturer Profile !");
        }
    }//GEN-LAST:event_ShowButtonActionPerformedActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditLecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditLecturer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButtonActionPerformed;
    private javax.swing.JButton EditButtonActionPerformed;
    private javax.swing.JTable LecturerProfileData;
    private javax.swing.JButton ReturnButtonActionPerformed;
    private javax.swing.JButton SaveButtonActionPerformed;
    private javax.swing.JButton ShowButtonActionPerformed;
    private javax.swing.JTextField contactNumTxt;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jobTitileTxt;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField staffIDTxt;
    // End of variables declaration//GEN-END:variables
}
